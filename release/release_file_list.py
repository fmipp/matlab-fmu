# ----------------------------------------------------------------------
# Copyright (c) 2015, AIT Austrian Institute of Technology GmbH.
# All rights reserved. See file TRNSYS_FMU_LICENSE.txt for details.
# ----------------------------------------------------------------------

########################################################################
#
# This script provides the list of files included into a release of 
# the FMI++ TRNSYS Export Utility.
#
########################################################################

# List of source files (including relative path) that are originally from FMI++.
files_from_fmipp = [
    'sources\\common\\FMIPPConfig.h',
    'sources\\common\\FMIType.h',
    'sources\\common\\fmi_v1.0\\fmi_cs.h',
    'sources\\common\\fmi_v1.0\\fmiModelTypes.h',
    'sources\\common\\fmi_v2.0\\fmi_2.h',
    'sources\\common\\fmi_v2.0\\fmi2ModelTypes.h',
    'sources\\export\\functions\\fmi_v1.0\\fmiFunctions.cpp',
    'sources\\export\\functions\\fmi_v1.0\\fmiFunctions.h',
    'sources\\export\\functions\\fmi_v2.0\\fmi2Functions.cpp',
    'sources\\export\\functions\\fmi_v2.0\\fmi2Functions.h',
    'sources\\export\\include\\FMIComponentFrontEnd.h',
    'sources\\export\\include\\FMIComponentFrontEndBase.h',
	'packages\\+fmipputils',
]

# Additional list of files (including relative path) from the repository that are part of the release.
additional_files = [
    'setup.m', # setup script
    'matlab_fmu_create.py', # script for creating an FMU
    'build.bat', # batch script for FMU compilation
    'license\\BOOST_SOFTWARE_LICENSE.txt',
    'license\\FMIPP_LICENSE.txt',
    'license\\MATLAB_FMU_LICENSE.txt',
    'test\\import\\StandaloneRadiator.m',
    'test\\import\\StandaloneRadiator.mo',
	'test\\export\\SimpleController.m',
	'test\\export\\ControlledRadiator.mo',
	'test\\export\\create_fmu.m',
]

# List of files (without binaries and docs) that are part of the release.
files_for_release = files_from_fmipp + additional_files

# List of swig resources (including relative path).
resources_from_fmipp_swig = {
    'packages\\SwigMem.m' : 'import\\swig\\SwigMem.m', # helper scripts generated by SWIG
    'packages\\SwigRef.m' : 'import\\swig\\SwigRef.m', # helper scripts generated by SWIG
    'packages\\lib\\fmippex.dll' : 'Release\\fmippex.dll', # complete FMI++ export library
    'packages\\lib\\fmippim.dll' : 'Release\\fmippim.dll', # complete FMI++ import library
    'packages\\lib\\fmippexMEX.mexw32' : 'export\\swig\\Release\\fmippexMEX.mexw32', # MEX wrapper for FMI++ export library
    'packages\\lib\\fmippimMEX.mexw32' : 'import\\swig\\Release\\fmippimMEX.mexw32', # MEX wrapper for FMI++ import library
    'packages\\+fmippex' : 'export\\swig\\+fmippex', # scripts for accessing MEX wrapper
    'packages\\+fmippim' : 'import\\swig\\+fmippim', # scripts for accessing MEX wrapper
}

# List of binaries that are not provided by the repository (see also README in 'binaries' subfolder).
required_binaries = [
    'binaries\\libboost_date_time-vc120-mt-1_58.lib', # static BOOST date-time library
    'binaries\\libboost_filesystem-vc120-mt-1_58.lib', # static BOOST Filesystem library
    'binaries\\libboost_system-vc120-mt-1_58.lib', # static BOOST System libarary
    'binaries\\libfmipp_fmu_frontend.lib', # static library containing pre-compiled parts of the front end
    'packages\\lib\\sundials_cvode.dll', # SUNDIALS library
    'packages\\lib\\sundials_nvecserial.dll', # SUNDIALS library
]

# The compiled documentation in PDF format (not part of the repository).
doc_file = 'doc\\matlab-fmu-doc.pdf'

